- How did viewing a diff between two versions of a file help you see the bug that was introduced?
	+ It was easy to see what line the changes where made on. This way it is easy to see where a tipo or wrong change was made.
- How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	+ You can see where the changes were made and what they were. This makes it easy to undo your mistakes or see where your train of thoughts was.
- What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	+ Drawback is that you forget and make a too big of a change between commits. Pro is that you have versions of your program that are logical and not saved in the middle of a sentence for example.
- Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	+ Because version control is mainly used for code and when coding using multiple files for one program is normal. While Google Docs is mainly used for documents that do not necessarily depend on each other.
- How can you use the commands git log and git diff to view the history of files?
	+ git log is used to gat the id's. With these id's you can use git diff to see where the changes were made.
- How might using version control make you more confident to make changes that could break something?
	+ You can always revert back to code that was working. So making errors is not a big deal anymore.
- Now that you have your workspace set up, what do you want to try using Git for?
	+ VR game i'm working on